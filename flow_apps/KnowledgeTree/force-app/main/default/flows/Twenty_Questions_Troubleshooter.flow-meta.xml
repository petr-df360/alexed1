<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <description>Take the value of the radio button selected. That is the id of the next node to transition to.</description>
        <name>Set_Next_Node_From_Choice</name>
        <label>Set Next Node (From Choice)</label>
        <locationX>515</locationX>
        <locationY>310</locationY>
        <assignmentItems>
            <assignToReference>curDiagnosticNodeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>outcomeChoices</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Load_Current_Node</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Next_Node_From_Continuation_Node</name>
        <label>Set Next Node (From Continuation Node)</label>
        <locationX>514</locationX>
        <locationY>180</locationY>
        <assignmentItems>
            <assignToReference>curDiagnosticNodeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>curRecord.ContinuationDiagnosticNode__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Load_Current_Node</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>If you reach a leaf node, it might not have a target node selected</description>
        <name>Does_Outcome_Have_a_Target_Node</name>
        <label>Does Outcome Have a Target Node?</label>
        <locationX>1242</locationX>
        <locationY>318</locationY>
        <defaultConnector>
            <targetReference>No_Node_Found</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Outcome Doesn&apos;t Have Target</defaultConnectorLabel>
        <rules>
            <name>Yes_Has_Target_Node</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>outcomeChoices</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>curRecord.End_Node__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Next_Node_From_Choice</targetReference>
            </connector>
            <label>Yes, Has Target Node</label>
        </rules>
        <rules>
            <name>Yes_Has_Target_Continuation_Node</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>curRecord.Continuation_Node__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Next_Node_From_Continuation_Node</targetReference>
            </connector>
            <label>Yes, Has Target Continuation Node</label>
        </rules>
        <rules>
            <name>Yes_Has_Target_End_Node</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>curRecord.End_Node__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Display_Finish_Screen</targetReference>
            </connector>
            <label>Yes, Has Target End Node</label>
        </rules>
    </decisions>
    <decisions>
        <name>Next_Node_Found</name>
        <label>Next Node Found?</label>
        <locationX>134</locationX>
        <locationY>494</locationY>
        <defaultConnector>
            <targetReference>No_Node_Found</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Node Found</defaultConnectorLabel>
        <rules>
            <name>Found_a_Node</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>curRecord.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>What_is_Data_Source</targetReference>
            </connector>
            <label>Found a Node</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision can be expanded to evaluate if the content should be displayed from the Diagnostic Node itself, or from another source like a Knowledge article. Displaying screen flow content that comes directly from Knowledge could be done by: 1) adding an outcome here (i.e. &quot;Content from Knowledge Article&quot; where the curRecord&gt;Use Knowledge Article Content equals true), 2) pointing that outcome to a Get Records that queries the knowledge article cited on the DiagnosticNode (i.e. Id is equal to the curRecord&gt;Knowledge__c field), 3) pointing the Get Records to a knowledge specific screen (i.e. Display Knowledge Screen) that displays the title and content of the knowledge article record in the flow screen using the variable values obtained from the preceding Get Records variable, and 4) pointing the knowledge specific flow screen to the &quot;Does Outcome Have a Target Node&quot; decision to continue on in the normal screen progression.</description>
        <name>What_is_Data_Source</name>
        <label>What is Data Source?</label>
        <locationX>331</locationX>
        <locationY>497</locationY>
        <defaultConnector>
            <targetReference>No_Display_Content_Found</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Display Content Found</defaultConnectorLabel>
        <rules>
            <name>Display_Content_from_Diagnostic_Node</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>curRecord.Node_Content__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Display_Diagnostic_Node</targetReference>
            </connector>
            <label>Display Content from Diagnostic Node</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>curOutcomeChoices</name>
        <dataType>String</dataType>
        <displayField>Label__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>HomeDiagnosticNode__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>curDiagnosticNodeId</elementReference>
            </value>
        </filters>
        <object>DiagnosticOutcome__c</object>
        <valueField>TargetDiagnosticNode__c</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>Twenty Questions (Troubleshooter) {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Twenty Questions (Troubleshooter)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Load_Current_Node</name>
        <label>Load Current Node</label>
        <locationX>142</locationX>
        <locationY>302</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Next_Node_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>curDiagnosticNodeId</elementReference>
            </value>
        </filters>
        <object>DiagnosticNode__c</object>
        <outputReference>curRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Node_Content__c</queriedFields>
        <queriedFields>End_Node__c</queriedFields>
        <queriedFields>Continuation_Node__c</queriedFields>
        <queriedFields>ContinuationDiagnosticNode__c</queriedFields>
    </recordLookups>
    <screens>
        <name>Display_Diagnostic_Node</name>
        <label>Display Diagnostic Node</label>
        <locationX>559</locationX>
        <locationY>496</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Does_Outcome_Have_a_Target_Node</targetReference>
        </connector>
        <fields>
            <name>dispNodeContent</name>
            <fieldText>&lt;p&gt;{!curRecord.Node_Content__c}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>outcomeChoices</name>
            <choiceReferences>curOutcomeChoices</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select:</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>rule1</name>
            <extensionName>c:horizontalRuleFSC</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>navButton</name>
            <extensionName>c:navigationButtonFSC</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Edit Content</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>targetRecordId</name>
                <value>
                    <elementReference>curRecord.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>destinationType</name>
                <value>
                    <stringValue>record</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Display_Finish_Screen</name>
        <label>Display Finish Screen</label>
        <locationX>1248</locationX>
        <locationY>571</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Finish_Message</name>
            <fieldText>&lt;p&gt;No further action required. Click &quot;Finish&quot; to return to the start screen.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>No_Display_Content_Found</name>
        <label>No Display Content Found</label>
        <locationX>336</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>noDisplayContentFoundMessage</name>
            <fieldText>&lt;p&gt;The flow couldn&apos;t find any content to display. Contact your Salesforce Admin, or add text to the Node Content field on the DiagnosticNode record.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>No_Node_Found</name>
        <label>No Node Found</label>
        <locationX>142</locationX>
        <locationY>777</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>dispNoNodeMessage</name>
            <fieldText>&lt;p&gt;The flow couldn&apos;t find a diagnostic node corresponding to the choice you just selected. Contact your Salesforce Admin, or build out the node by creating a new DiagnosticNode record and then editing the DiagnosticOutcome corresponding to the choice you just selected to point to the new record.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>16</locationX>
        <locationY>90</locationY>
        <connector>
            <targetReference>Load_Current_Node</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>curDiagnosticNodeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>a0lB0000001ulKbIAI</stringValue>
        </value>
    </variables>
    <variables>
        <name>curRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>DiagnosticNode__c</objectType>
    </variables>
</Flow>