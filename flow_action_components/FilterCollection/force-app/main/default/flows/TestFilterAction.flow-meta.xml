<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>FilterCollection</name>
        <label>FilterCollection</label>
        <locationX>285</locationX>
        <locationY>50</locationY>
        <actionName>FilterCollection</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>outputScreen</targetReference>
        </connector>
        <inputParameters>
            <name>filterField</name>
            <value>
                <elementReference>Filter_on_which_field</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sourceAccountCollection</name>
            <value>
                <elementReference>inputAccountCollection</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetValuesCSVString</name>
            <value>
                <elementReference>Filter_on_which_values_comma_separated</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>filteredAccountCollection</assignToReference>
            <name>filteredAccountCollection</name>
        </outputParameters>
    </actionCalls>
    <assignments>
        <name>Assign_Target</name>
        <label>Assign Target</label>
        <locationX>87</locationX>
        <locationY>172</locationY>
        <assignmentItems>
            <assignToReference>targetValues</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Banking</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetAccounts</targetReference>
        </connector>
    </assignments>
    <interviewLabel>TestFilterAction {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TestFilterAction</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetAccounts</name>
        <label>Get Accounts</label>
        <locationX>185</locationX>
        <locationY>172</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetContacts</targetReference>
        </connector>
        <object>Account</object>
        <outputReference>inputAccountCollection</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Industry</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>GetContacts</name>
        <label>GetContacts</label>
        <locationX>284</locationX>
        <locationY>172</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FilterCollection</targetReference>
        </connector>
        <object>Contact</object>
        <outputReference>inputContacts</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <screens>
        <name>InputScreen</name>
        <label>InputScreen</label>
        <locationX>184</locationX>
        <locationY>50</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>GetAccounts</targetReference>
        </connector>
        <fields>
            <name>dispOverview</name>
            <fieldText>&lt;p&gt;This demo flow filters a collection of SObjects, equivalent to the use of IN clause in SOQL.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The FilterCollection Apex class currently supports 5 standard objects. This flow queries for  Accounts and then applies:&lt;/p&gt;&lt;p&gt; 1) a filterField value representing a field name on the chosen object&lt;/p&gt;&lt;p&gt;2) a collection of string values (this is equivalent to the target of an IN clause.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Filter_on_which_field</name>
            <dataType>String</dataType>
            <fieldText>Filter on which field (e.g. &quot;Industry&quot;)</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Filter_on_which_values_comma_separated</name>
            <dataType>String</dataType>
            <fieldText>Filter on which values? (comma separated, e.g. &quot;Banking&quot;)</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>outputScreen</name>
        <label>outputScreen</label>
        <locationX>428</locationX>
        <locationY>50</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>dispReadout</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Filtered Accounts are: &lt;/p&gt;&lt;p&gt;{!filteredAccountCollection}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <startElementReference>InputScreen</startElementReference>
    <status>Draft</status>
    <variables>
        <name>filteredAccountCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>inputAccountCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>inputContacts</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>targetValues</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
